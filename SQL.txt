Join:   to merge two or more than two tables 
========================
-> at least one column must be same (logically, name can be different)

There are follownig types of join:
1. inner join / equi join / default join 	: return common/matching rows 
2. outer join / full outer join 		: return all rows from both sources
 a. left join / left outer join 		: return all rows from left table and matching from right table
 b. right join / right outer  join 		: return all rows from right table and matching from left table 


other type of join:
	-self join    :   join with itself 
	-cross join / cartisan product 
Example:
---------------
Course
cid    cname    
1	.net
2	java
3	MERN
4	MEAN
5	Angular



enrollment
eid   stu_name   courseid  date   fee  
1     nitin	 1     ...    12000	
2     jatin      2     .....  14000	
3     ayush     1      ...    12000	
4     monika   5      ...     11000
5     monika1   15      ...     11000
6     monika2   10      ...     11000


inner join: by cid 
====================

select c.cname,e.stu_name
from course as c  inner join enrollment as e 
	on c.cid = e.courseid 

cname stu_name
.net  nitin
java   jatin
.net   ayush
Angular monika 

left join: by cid 
====================
select c.cname,e.stu_name
from course as c  left join enrollment as e 
	on c.cid = e.courseid 

cname stu_name
.net  nitin
java   jatin
.net   ayush
MERN    NULL
MEAN    NULL 
Angular monika 



right join: by cid 
====================
select c.cname,e.stu_name
from course as c right join enrollment as e 
	on c.cid = e.courseid 


cname stu_name
.net  nitin
java   jatin
.net   ayush
Angular monika 
NULL	monika1
NULL	monika2

cross join / cartisan product 
===================================
t1
c1  c2 
1`  a
2  b
3  c
4  d
5  3 

t2 
c1 c3
1  22
2  44
3   55

select * 
from t1,t2 

--15 rows 

c1 c2 c1 c3
1  a  1  22
1  a  2  44
1  a  3   55
2  b   1  22
2  b   2  44
2  b   3   55

3  c
4  d
5  3 


select * 
from t1,t2 
where t1.c1 = t2.c1

c1 c2 c1 c3
1  a  1  22
2  b   2  44

----
t1
1
2
t2
1
2

select * from t1 , t2
== 4 

t1
1
2
t2

Q.cselect * from t1 , t2
=== 2 
Q. 
select * from t1 where 1= 1
	2 rows
select * from t1 where 1= 2
	no result 


self join
--------------------------
EMP:
eid  name   mgrid
1   nitin     null
2   jatin     1
3    rahul    1
4     manish  2


output:
eid  name mgrid mgrname 

select e1.eid,e1.name,e1.mgrid, e2.name as mgr_name 
from emp e1 left  join emp e2 
	on e1.mgrid = e2.eid ;

Q. show subject where student data is not present 
-----
select c.cname
from course as c  left join enrollment as e 
	on c.cid = e.courseid 
where e.stu_name is null 

select c.cname
from course where cid not in (SELECT courseid from enrollment ) -- wrong query





Select max(colid) ,min(colid),sum(colid),  avg(colid) , count(colid) from table

--text function 
Select upper(col1) , lower(col1) , length(col1) , left(col1,3), right(col,4), replace(col,'old char','new val'), ltrim(col1), rtrim(col1) , rtrim(ltrim(col)) from table


left(india,3)
	ind 
Union:  
========================
t1 
id name 
1
2


T2:
1
3
4

--union : return unique value 
Select * from t1 
Union 
Select * from t2 ;



--return all values /rows 
Select * from t1 
Union all  
Select * from t2 ;


1. .. 
2.  .. 
3.  .. 
4






Group by:  
========================
T1
Id.  Name.  Department 
1.           Hr 
2             It 
              Hr

..

Select department, count(department),max(id), min(id), avg(id), sum(id)
From t1 Group by  department 

Hr 56
It 78



Having: can be used only with group by ,   
========================

Select department, count(department)
From t1 Group by  department 
Having count(department) > 60 



It 78 



===========multiple table join 

Select e.eid, e.name, s.basic, c.country 
From Emp as e inner join sal as s 
On e.eid. = s.id 
Inner join department as d 
 On e.did = d.did
Left join country  as c

On e.cid = c.id 
